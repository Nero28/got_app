{"ast":null,"code":"export default class GotService {\n  constructor(props) {\n    this._apiBase = 'https://anapioficeandfire.com/api';\n  }\n\n  async getResource(url) {\n    const res = await fetch(`${this._apiBase}${url}`);\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url} status: ${res.status}`);\n    }\n\n    const some = await res.json();\n    return some;\n  }\n\n  getAllCharacters() {\n    return this.getResource(`/characters?page=5&pageSize=10`);\n  }\n\n  getCharacter(id) {\n    return this.getResource(`/characters/${id}`);\n  }\n\n}\n;\nconst got = new GotService();\ngot.getAllCharacters().then(res => console.log(res));","map":{"version":3,"sources":["/home/nero/Documents/DEV/got_app/got_app/src/server/server.js"],"names":["GotService","constructor","props","_apiBase","getResource","url","res","fetch","ok","Error","status","some","json","getAllCharacters","getCharacter","id","got","then","console","log"],"mappings":"AAAA,eAAe,MAAMA,UAAN,CAAiB;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,SAAKC,QAAL,GAAc,mCAAd;AACH;;AAEG,QAAMC,WAAN,CAAkBC,GAAlB,EAAuB;AACnB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKJ,QAAS,GAAEE,GAAI,EAAxB,CAAvB;;AACA,QAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACT,YAAM,IAAIC,KAAJ,CAAW,mBAAkBJ,GAAI,YAAWC,GAAG,CAACI,MAAO,EAAvD,CAAN;AACH;;AACD,UAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACH;;AAEDE,EAAAA,gBAAgB,GAAG;AACf,WAAO,KAAKT,WAAL,CAAkB,gCAAlB,CAAP;AACH;;AAEDU,EAAAA,YAAY,CAACC,EAAD,EAAI;AACZ,WAAO,KAAKX,WAAL,CAAkB,eAAcW,EAAG,EAAnC,CAAP;AACH;;AApB2B;AAqB/B;AAED,MAAMC,GAAG,GAAG,IAAIhB,UAAJ,EAAZ;AAECgB,GAAG,CAACH,gBAAJ,GACII,IADJ,CACSX,GAAG,IAAEY,OAAO,CAACC,GAAR,CAAYb,GAAZ,CADd","sourcesContent":["export default class GotService {\nconstructor(props){\n    this._apiBase='https://anapioficeandfire.com/api';\n}\n\n    async getResource(url) {\n        const res = await fetch(`${this._apiBase}${url}`);\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url} status: ${res.status}`)\n        }\n        const some = await res.json();\n        return some;\n    };\n\n    getAllCharacters() {\n        return this.getResource(`/characters?page=5&pageSize=10`);\n    }\n\n    getCharacter(id){\n        return this.getResource(`/characters/${id}`);\n    }\n};\n\nconst got = new GotService();\n\n got.getAllCharacters()\n    .then(res=>console.log(res))\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}